<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:faces="http://www.springframework.org/schema/faces" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
           http://www.springframework.org/schema/faces 
           http://www.springframework.org/schema/faces/spring-faces-2.0.xsd
           http://www.springframework.org/schema/security 
           http://www.springframework.org/schema/security/spring-security-3.2.xsd 
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />

	<http auto-config="true" use-expressions="true" >
		<intercept-url pattern="/inicio.jsf" requires-channel="http" access="isAuthenticated()" />

		<intercept-url pattern="/servico.jsf" access="hasAnyRole('MANTER_SERVICOS')" />
		
		<intercept-url pattern="/pages/*" access="isAuthenticated()" />
		
		<custom-filter ref="ajaxTimeoutRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
		<form-login login-page="/login.jsf" default-target-url="/inicio.jsf" />
	</http>

	<beans:bean id="ajaxTimeoutRedirectFilter" class="br.com.bitwork.security.AjaxTimeoutRedirectFilter">
    	<beans:property name="customSessionExpiredErrorCode" value="901"/>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<password-encoder hash="md5"/>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT usuario.email AS username, usuario.senha AS password, CASE usuario.ativo WHEN 1 THEN 'TRUE' ELSE 'FALSE' END as wecs_system 
					FROM USUARIO usuario WHERE usuario.email = ? "
				authorities-by-username-query="SELECT usuario.email AS username, grupo.role AS authority FROM USUARIO usuario 
					INNER JOIN Perfil perfil ON usuario.id_perfil = perfil.id_perfil 
					INNER JOIN grupo_perfil grupoPerfil ON grupoPerfil.id_perfil = perfil.id_perfil
					INNER JOIN grupo on grupo.id_grupo = grupoPerfil.id_grupo
					WHERE usuario.email = ? AND grupoPerfil.permitido = 1 "/>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:jboss/datasources/condominio" />
	</beans:bean>
</beans:beans>